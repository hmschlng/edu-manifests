name: Edu Service CI

on:
  workflow_dispatch:
    inputs:
      REPO_LIST:
        description: 'JSON array of repositories to process'
        default: '["edu-user", "edu-goods"]'
env:
  REPO_ACCOUNT: hmschlng
  JAVA_VERSION: 17

jobs:
  run-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJson(github.event.inputs.REPO_LIST) }}

    steps:
      - name: '1. Checkout Service Repository'
        uses: actions/checkout@v4
        with:
          repository: ${{env.REPO_ACCOUNT}}/${{matrix.repo}}
          path: ${{matrix.repo}}
          token: ${{secrets.REPO_TOKEN}}

      - name: '2. Set up JDK ${{env.JAVA_VERSION}}'
        uses: actions/setup-java@v4
        with:
          java-version: ${{env.JAVA_VERSION}}
          distribution: 'temurin'

      - name: '3. Build with Gradle Wrapper'
        run: |
          cd ${{matrix.repo}}
          ./gradlew build

      - name: '4. Dockerhub login'
        uses: docker/login-action@v1
        with:
          login-server: ${{ secrets.DOCKERHUB_LOGIN_SERVER }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: '5. Gen Version'
        id: gen-version
        run: |
          export TZ=Asia/Seoul
          echo "VERSION=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: '6. Build & Tag Image'
        run: |
          cd ${{matrix.repo}}
          docker build -t ${{ secrets.DOCKERHUB_LOGIN_SERVER  }}/${{matrix.repo}}:${{ env.VERSION }} -f Dockerfile .
          docker tag ${{ secrets.DOCKERHUB_LOGIN_SERVER  }}/${{matrix.repo}}:${{ env.VERSION }} ${{ env.REPO_ACCOUNT  }}/${{matrix.repo}}:${{ env.VERSION }}

      - name: '7. Push image'
        uses: docker/login-action@v1
        with:
          login-server: ${{ secrets.DOCKERHUB_LOGIN_SERVER  }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - run: |
          docker push ${{env.REPO_ACCOUNT}}/${{matrix.repo}}:${{env.VERSION}}

  update-manifest:
    needs: run-ci            # 작업 순서 정의
    runs-on: ubuntu-latest
        
    steps:
      # - name: '0. Acquire Git Push Lock'   # 동시 git push 방지를 위해 lock 설정 
      #   uses: softprops/turnstyle@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: '1. Checkout Manifest Repository'
        uses: actions/checkout@v4
        with:
          repository: ${{env.REPO_ACCOUNT}}/edu-manifests
          path: edu-manifests
          token: ${{secrets.REPO_TOKEN}}
          fetch-depth: 0
          ref: main

      - name: '2. Setup Kustomize'              
        uses: imranismail/setup-kustomize@v1  
        
      # - name: '3. Update Kubernetes resources'
      #   run: |
      #     cd edu-manifests/manifests        
      #     ls -al
      #     FULL_IMAGE_NAME="${{ env.REPO_ACCOUNT }}/${{ matrix.repo }}:${{ env.VERSION }}"
      #     kustomize edit set image $FULL_IMAGE_NAME
      #     cat kustomization.yaml
      - name: '3. Update Kubernetes resources'
        run: |
          cd edu-manifests/manifests
          for repo in ${{ join(fromJson(github.event.inputs.REPO_LIST), ' ') }}
          do
            FULL_IMAGE_NAME="${{ env.REPO_ACCOUNT }}/$repo:${{ env.VERSION }}"
            kustomize edit set image ${{ env.REPO_ACCOUNT }}/$repo=$FULL_IMAGE_NAME
            echo "Updated kustomization.yaml for $repo:"
            cat kustomization.yaml
          done
      
      - name: '4. Commit files'
        run: |
          cd edu-manifests/manifests  
          ls -al
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git fetch origin main
          git merge origin/main --no-edit
          git add .
          git commit -am "Update image tag for ${{ matrix.repo }}:${{ env.VERSION }}"
          git push -u origin main
          
      # - name: '5. Release push lock' # 작업 완료 후 lock 해제제
      #   if: always()
      #   uses: softprops/turnstyle@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
